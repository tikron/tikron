<?xml version="1.0" encoding="UTF-8"?>
<!--
	Spring configuration of the persistence layer. 
-->
<beans xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:tx="http://www.springframework.org/schema/tx"
		xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
	
	<!-- Source: https://github.com/eugenp/tutorials/tree/master/persistence-modules/spring-persistence-simple -->

<!-- Moved to application-context.xml -->		
<!-- 	<context:property-placeholder location="classpath:persistence.properties"/> -->

	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="de.tikron.persistence.model, de.tikru.commons.jpa.domain"/>
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
		</property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<!-- Workaround : Schema-validation: missing table [hibernate_sequence] -->
				<!-- Hibernate 5 picks TABLE sequence generator instead of IDENTITY. So schema validation on application startup fails, because missing sequence database table. -->
<!-- 				https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.3/html/Migration_Guide/Preserve_the_Existing_Behavior_of_the_Hibernate_Identity_Auto_Generated_Value1.html -->
				<prop key="hibernate.id.new_generator_mappings">false</prop>
				<!-- Logging (see https://stackoverflow.com/questions/2536829/hibernate-show-real-sql)-->
				<prop key="show_sql">${hibernate.show_sql}</prop>
				<prop key="format_sql">${hibernate.format_sql}</prop>
				<prop key="use_sql_comments">${hibernate.use_sql_comments}</prop>
			</props>
		</property>
    </bean>

	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="java:comp/env/jdbc/tikron" />
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<tx:annotation-driven />
	
	<bean id="persistenceExceptionTranslationPostProcessor" class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>
	
	<!-- Use data access objects of type JPA -->
	<bean id="commentDao" class="de.tikron.persistence.dao.user.CommentDaoJpaImpl" />
	<bean id="userDao" class="de.tikron.persistence.dao.user.UserDaoJpaImpl" />
	<bean id="roleDao" class="de.tikron.persistence.dao.user.RoleDaoJpaImpl" />

	<bean id="catalogDao" class="de.tikron.persistence.dao.gallery.CatalogDaoJpaImpl" />
	<bean id="categoryDao" class="de.tikron.persistence.dao.gallery.CategoryDaoJpaImpl" />
	<bean id="pictureDao" class="de.tikron.persistence.dao.gallery.PictureDaoJpaImpl" />
	<bean id="categoryTypeDao" class="de.tikron.persistence.dao.gallery.CategoryTypeDaoJpaImpl" />
	
	<bean id="clipDao" class="de.tikron.persistence.dao.misc.ClipDaoJpaImpl" />
	<bean id="teaserDao" class="de.tikron.persistence.dao.misc.TeaserDaoJpaImpl" />
	<bean id="webRecommendationDao" class="de.tikron.persistence.dao.misc.WebRecommendationDaoJpaImpl" />
</beans>

